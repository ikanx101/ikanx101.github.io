---
title: "Math and Computational Science for Business part 1: Simulasi Monte Carlo untuk Planning Target Omset"
format: 
  gfm:
    html-math-method: webtex
    fig-dpi: 500
    fig-width: 8
    fig-height: 4.5
editor: visual
execute:
  echo: false
  warning: false
  error: false
---

```{r}
#| include: false

rm(list=ls())

library(dplyr)
library(ggplot2)

load("ready.rda")
```

Sepertinya sudah lama sekali saya tidak menulis artikel di *blog*. Jika saya pikirkan kembali, beberapa bulan belakangan pekerjaan datang bertubi-tubi layaknya huru-hara di akhir zaman kelak. *Hehe.*

Nah, kali ini mumpung saya sedang *business trip* di luar kota dan punya waktu luang sebelum tidur, saya akan coba buat satu topik tersendiri tentang aplikasi matematika dan sains komputasi dalam bisnis. Tentu saja beberapa *use cases* yang hendak saya *share* ini berasal dari pengalaman selama ini. Jika rekan-rekan pembaca punya kesamaan *use cases* atau bahkan punya *use cases* lain yang mau didiskusikan, *feel free* untuk menghubungi saya melalui *telegram*.

Pada artikel pertama ini, saya hendak menuliskan tentang bagaimana prinsip simulasi Monte Carlo bisa saya gunakan untuk menghitung dan melakukan *planning* capaian omset di suatu cafe atau restoran.

------------------------------------------------------------------------

Di suatu cafe, omset bulanan didefinisikan sebagai total semua pembelian yang dilakukan oleh konsumen. Jadi, jika pada bulan X diketahui ada 100 orang pelanggan, maka omsetnya adalah:

$$omset_X = \sum_{i=1}^{100}harga_i \times item sold_i$$

Misalkan:

1.  Pelanggan pertama, terdiri dari satu keluarga berisi empat orang. Masing-masing memesan menu makanan dan minuman pada harga yang sama (Rp50.000). Maka omset yang didapatkan adalah sebesar $4 \times 50.000 = 200.000$.
2.  Pelanggan kedua, terdiri dari sepasang suami istri. Suami memesan menu makanan dan minuman seharga Rp75.000 sedangkan istri memesan menu minuman dan dessert seharga Rp80.000. Maka omset yang didapatkan adalah sebesar $75.000 + 80.000 = 155.000$.
3.  Dan seterusnya.

Dari data historikal yang ada selama enam bulan ke belakang, didapatkan informasi bahwa pelanggan pada saat *weekend* lebih banyak dibandingkan pelanggan pada saat *weekdays*. Sang *manager* mencoba mengolah data tersebut sehingga mendapatkan informasi sebagai berikut:

Pada saat *weekend*, pelanggan yang datang berkisar antara 80-120 *tables* dengan komposisi:

1.  50% keluarga berisi 3-7 orang.
2.  30% pasangan.
3.  10% rombongan berisi 5-10 orang.
4.  10% pelanggan sendiri.

Pada saat *weekdays*, pelanggan yang datang berkisar antara 50-80 *tables* dengan komposisi:

1.  10% keluarga berisi 3-5 orang.
2.  20% pasangan.
3.  30% rombongan berisi 7-12 orang.
4.  40% pelanggan sendiri.

*Range* harga makanan dan minuman yang disediakan cukup sempit (tidak lebar, harga hampir mirip-mirip). Besaran uang yang dibelikan per pelanggan mengikuti kurva normal dengan *mean* Rp80.000 dan standar deviasi Rp30.000 (artinya sekitar 66% peluang seorang pelanggan membeli menu di kisaran harga Rp50.000-Rp110.000).

Nah, berdasarkan informasi di atas, sang *manager* mencoba membuat simulasi Monte Carlo untuk mendapatkan persebaran omset dan distribusi peluangnya. Asumsinya adalah satu bulan terdiri dari empat minggu dengan satu minggu terdiri dari lima hari *weekdays* dan dua hari *weekend*. Simulasi dijalankan sebanyak 100.000 kali.

Berikut adalah *flowchart* simulasinya:

![](IMG_0684.png){fig-align="center" width="300"}

Apa saja faedah dari simulasi ini? Mari kita lihat pada grafik berikut:

## __Hasil Simulasi__

```{r}
#| echo: false

rata = mean(df$hasil)
q1_  = quantile(df$hasil,.25)
q3_  = quantile(df$hasil,.75)

label_rata = scales::dollar(rata,prefix = "Rp")
label_q1   = scales::dollar(q1_,prefix = "Rp")
label_q3   = scales::dollar(q3_,prefix = "Rp")

label_rata = paste0("Mean:\n",label_rata)
label_q1   = paste0("Q1:\n",label_q1)
label_q3   = paste0("Q3:\n",label_q3)

df |>
  ggplot(aes(x = hasil)) +
  geom_density(fill = "steelblue",alpha = .3) +
  geom_vline(xintercept = rata,color = "darkgreen") +
  annotate("label",x = rata,y = 5e-9,label = label_rata,
           color = "darkgreen",size = 2.5) +
  geom_vline(xintercept = q1_,color = "darkblue") +
  annotate("label",x = q1_,y = 2.5e-9,label = label_q1,
           color = "darkblue",size = 2.5) +
  geom_vline(xintercept = q3_,color = "darkred") +
  annotate("label",x = q3_,y = 7.5e-9,label = label_q3,
           color = "darkred",size = 2.5) +
  theme_light() +
  theme(axis.title.y = element_blank(),
        axis.text = element_blank()) +
  labs(title = "Sebaran Omset Hasil Simulasi",
       x = "Omset dalam (rupiah)")
```

Dari grafik di atas, kita bisa mendapatkan _density plot_ dari omset yang mungkin tercapai setiap bulannya. Analoginya seperti __Doctor Strange__ pada film __Avengers: Endgame__ yang lalu, semua kemungkinan omset yang bisa terjadi dalam 100.000 kondisi ditampilkan dalam grafik tersebut.

Kita bisa dapatkan _expected_ omset yakni _mean_ omset hasil simulasi sebesar Rp549,694,758. Sang manager langsung mencocokkan apakah angka _expected_ omset dengan rata-rata omset _real_ selama enam bulan ke belakang sudah mirip-mirip atau belum. Ternyata setelah dicek, angka hasil simulasi mirip-mirip dengan angka _real_. Artinya formula simulasi yang digunakan sudah bisa mendekati kondisi _real_-nya.

Bagaimana jika hasilnya berbeda dan melenceng jauh? Artinya ada parameter yang harus diperbaiki atau asumsi cara perhitungan omset harus diubah. Untuk kasus ini saya permudah contohnya ya. Namun pada kondisi _real_ di pekerjaan, biasanya dibutuhkan iterasi beberapa kali hingga hasil simulasi mendekati angka _real_-nya.

Perhatikan nilai Q1 (kuartil 1) pada grafik di atas. Apa artinya? Dengan kondisi yang ada sekarang sang manager punya peluang sebesar 75% bahwa omset cafe selama sebulan akan mencapai minimal Rp524,712,290.

Perhatikan juga nilai Q3 (kuartil 3) pada grafik di atas. Apa artinya? Dengan kondisi yang ada sekarang sang manager punya peluang sebesar 75% bahwa omset cafe selama sebulan akan mencapai maksimal Rp575,941,917.

Dari simulasi ini sang _manager_ juga bisa merencanakan bagaimana caranya untuk meningkatkan omset cafe di bulan-bulan berikutnya. Bagaimana? Dengan membuat program aktivasi yang bisa mengubah grafik omset tersebut ke arah kanan. Selain itu, program aktivasi bisa juga untuk mengubah grafik omset menjadi lebih pendek _range_-nya.

Berikut adalah ilustrasinya:

![](IMG_0685.jpeg){fig-align="center" width="300"}


Program aktivasi itu harus bisa ditranslasikan secara _real_ untuk mengubah parameter.

Misalkan pada bulan berikutnya sang _manager_ membuat program sebagai berikut: 

1. Diskon khusus pelanggan arisan pada _weekdays_. Walau besaran uang yang dibelikan konsumen berkurang akibat diskon tapi diharapkan menaikkan _traffic_ per harinya. 
2. Paket spesial menu keluarga, misalkan memberikan paket menu keluarga sehingga secara tidak sadar menaikkan besaran uang yang dibelanjakan konsumen. 
3. Spesial diskon pada hari tertentu dan pada pelanggan tertentu untuk menaikkan _traffic_.

Kita bisa simulasikan kembali dengan mengubah parameter-parameter yang ada. Setelah itu kita bisa melihat program mana yang bisa memberikan kenaikan _expected_ omset paling besar.

_Planning_ dengan bantuan simulasi Monte Carlo memberikan kita gambaran terhadap sensitivitas keputusan bisnis pada omset.


---

`if you find thsi article helpful, support this bog by clicking the ads.`
