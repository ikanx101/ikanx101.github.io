<<<<<<< HEAD
filter(kondisi == "Saat COVID") %>%
ggplot(aes(x = "",
y = freq,
fill = ftr)) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette="Set2") +
coord_polar("y", start=0) +
ggrepel::geom_label_repel(aes(label = paste(ftr,persen,sep = "\n")),position = position_stack(vjust = 0.5)) +
theme_pubclean() +
theme(panel.grid=element_blank(),
panel.background = element_blank(),
axis.title=element_blank(),
legend.position = 'none',
axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title = "Kondisi Pertandingan Saat COVID",
subtitle = "Data English Premier League 2019/2020",
caption = paste0("base: ",match_cov," pertandingan"))
new
new %>%
ggplot(aes(x = ftr,
y = freq)) +
geom_col(aes(fill = freq)) +
geom_label(aes(label = paste0("n: ",freq,"\nPercent: ",persen),
fill = freq),
color = "white",
size = 2) +
scale_fill_gradient(low = "steelblue",high = "darkred") +
facet_wrap(~kondisi) +
=======
group_by(away_team) %>%
summarise(home_goal = sum(fthg),
away_goal = sum(ftag),
play = n(),
ratio_goal_at_away = home_goal/play,
ratio_goal_against_home_at_away = away_goal/play) %>%
ungroup() %>%
mutate(all_home_goals = sum(home_goal)/sum(play),
all_away_goals = sum(away_goal)/sum(play),
away_attack = ratio_goal_against_home_at_away/all_away_goals,
away_defense = ratio_goal_at_away/all_home_goals,
overall_away = away_attack - away_defense) %>%
select(away_team,away_attack,away_defense,overall_away)
away
xgoal = function(tim_kandang,tim_tamu){
home =
home %>%
filter(home_team == tim_kandang)
away =
away %>%
filter(away_team == tim_tamu)
xgoal_home = home$home_attack * away$away_defense * avg_home_gol
xgoal_away = away$away_attack * home$home_defense * avg_away_gol
return(c(xgoal_home,xgoal_away))
}
# set tim yang bertanding
tim_home = "Manchester United"
tim_away = "Liverpool"
xgoal_data = xgoal(tim_home,tim_away)
prediksi_poisson = function(gol_home,xgoal_home_,gol_away,xgoal_away_){
dpois(x = gol_home, lambda = xgoal_home_) * dpois(x = gol_away, lambda = xgoal_away_) *100
}
# bikin data frame
pred = data.frame(skor_home = c(rep(0,6),rep(1,6),rep(2,6),rep(3,6),rep(4,6),rep(5,6)),
skor_away = rep(c(0:5),6))
pred$prob = prediksi_poisson(pred$skor_home,xgoal_data[1],pred$skor_away,xgoal_data[2])
library(ggplot2)
pred %>%
mutate(label = paste0(skor_home,"-",skor_away,"\nProb: ",round(prob,1),"%"),
skor_home = factor(skor_home,levels = c(0:10)),
skor_away = factor(skor_away,levels = c(0:10))) %>%
ggplot(aes(x = skor_home,y = skor_away,fill = prob)) +
geom_tile() +
geom_label(aes(label = label),size = 3) +
scale_fill_gradient2(low = "lightblue",high = "darkred",midpoint = 5) +
labs(x = tim_home,
y = tim_away)
pred %>%
mutate(hasil = case_when(skor_home > skor_away ~ tim_home,
skor_home < skor_away ~ tim_away,
skor_home == skor_away ~"Seri"),
hasil = factor(hasil,levels = c(tim_home,"Seri",tim_away))
) %>%
group_by(hasil) %>%
summarise(prob = sum(prob)) %>%
ungroup() %>%
mutate(label = round(prob,2),
label = paste0(label,"%")) %>%
ggplot(aes(x = hasil,
y = prob)) +
geom_col(color = "black") +
geom_label(aes(label=label)) +
>>>>>>> 42f993349a806065812a9443a01f5920e1d27d84
ggthemes::theme_wsj() +
labs(title = "Who wins?",
subtitle = "Based on Poisson Model",
caption = "Simulasi menggunakan R\nikanx101.com") +
theme(axis.text.y = element_blank(),
plot.caption = element_text(size=10,face = "bold"))
View(home)
xgoal = function(tim_kandang,tim_tamu){
home =
home %>%
filter(home_team == tim_kandang)
away =
away %>%
filter(away_team == tim_tamu)
xgoal_home = home$home_attack * away$away_defense * avg_home_gol
xgoal_away = away$away_attack * home$home_defense * avg_away_gol
return(c(xgoal_home,xgoal_away))
}
# set tim yang bertanding
tim_home = "Man United	"
tim_away = "Liverpool"
xgoal_data = xgoal(tim_home,tim_away)
prediksi_poisson = function(gol_home,xgoal_home_,gol_away,xgoal_away_){
dpois(x = gol_home, lambda = xgoal_home_) * dpois(x = gol_away, lambda = xgoal_away_) *100
}
# bikin data frame
pred = data.frame(skor_home = c(rep(0,6),rep(1,6),rep(2,6),rep(3,6),rep(4,6),rep(5,6)),
skor_away = rep(c(0:5),6))
pred$prob = prediksi_poisson(pred$skor_home,xgoal_data[1],pred$skor_away,xgoal_data[2])
library(ggplot2)
pred %>%
mutate(label = paste0(skor_home,"-",skor_away,"\nProb: ",round(prob,1),"%"),
skor_home = factor(skor_home,levels = c(0:10)),
skor_away = factor(skor_away,levels = c(0:10))) %>%
ggplot(aes(x = skor_home,y = skor_away,fill = prob)) +
geom_tile() +
geom_label(aes(label = label),size = 3) +
scale_fill_gradient2(low = "lightblue",high = "darkred",midpoint = 5) +
labs(x = tim_home,
y = tim_away)
pred %>%
mutate(hasil = case_when(skor_home > skor_away ~ tim_home,
skor_home < skor_away ~ tim_away,
skor_home == skor_away ~"Seri"),
hasil = factor(hasil,levels = c(tim_home,"Seri",tim_away))
) %>%
group_by(hasil) %>%
summarise(prob = sum(prob)) %>%
ungroup() %>%
mutate(label = round(prob,2),
label = paste0(label,"%")) %>%
ggplot(aes(x = hasil,
y = prob)) +
geom_col(color = "black") +
geom_label(aes(label=label)) +
ggthemes::theme_wsj() +
labs(title = "Who wins?",
subtitle = "Based on Poisson Model",
caption = "Simulasi menggunakan R\nikanx101.com") +
theme(axis.text.y = element_blank(),
plot.caption = element_text(size=10,face = "bold"))
xgoal = function(tim_kandang,tim_tamu){
home =
home %>%
filter(home_team == tim_kandang)
away =
away %>%
filter(away_team == tim_tamu)
xgoal_home = home$home_attack * away$away_defense * avg_home_gol
xgoal_away = away$away_attack * home$home_defense * avg_away_gol
return(c(xgoal_home,xgoal_away))
}
# set tim yang bertanding
tim_home = "Man United"
tim_away = "Liverpool"
xgoal_data = xgoal(tim_home,tim_away)
prediksi_poisson = function(gol_home,xgoal_home_,gol_away,xgoal_away_){
dpois(x = gol_home, lambda = xgoal_home_) * dpois(x = gol_away, lambda = xgoal_away_) *100
}
# bikin data frame
pred = data.frame(skor_home = c(rep(0,6),rep(1,6),rep(2,6),rep(3,6),rep(4,6),rep(5,6)),
skor_away = rep(c(0:5),6))
pred$prob = prediksi_poisson(pred$skor_home,xgoal_data[1],pred$skor_away,xgoal_data[2])
library(ggplot2)
pred %>%
mutate(label = paste0(skor_home,"-",skor_away,"\nProb: ",round(prob,1),"%"),
skor_home = factor(skor_home,levels = c(0:10)),
skor_away = factor(skor_away,levels = c(0:10))) %>%
ggplot(aes(x = skor_home,y = skor_away,fill = prob)) +
geom_tile() +
geom_label(aes(label = label),size = 3) +
scale_fill_gradient2(low = "lightblue",high = "darkred",midpoint = 5) +
labs(x = tim_home,
y = tim_away)
pred %>%
mutate(hasil = case_when(skor_home > skor_away ~ tim_home,
skor_home < skor_away ~ tim_away,
skor_home == skor_away ~"Seri"),
hasil = factor(hasil,levels = c(tim_home,"Seri",tim_away))
) %>%
group_by(hasil) %>%
summarise(prob = sum(prob)) %>%
ungroup() %>%
mutate(label = round(prob,2),
label = paste0(label,"%")) %>%
ggplot(aes(x = hasil,
y = prob)) +
geom_col(color = "black") +
geom_label(aes(label=label)) +
ggthemes::theme_wsj() +
labs(title = "Who wins?",
subtitle = "Based on Poisson Model",
caption = "Simulasi menggunakan R\nikanx101.com") +
theme(axis.text.y = element_blank(),
plot.caption = element_text(size=10,face = "bold"))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
setwd("~/Documents/ikanx101.com/_posts/EPL/poisson")
library(dplyr)
library(ggplot2)
<<<<<<< HEAD
library(ggpubr)
library(ggthemes)
data = read.csv("~/belajaR/Bukan Infografis/EPL/EPL.csv")
data = janitor::clean_names(data)
data =
data %>%
mutate(date = as.Date(date,format = "%d/%m/%Y"),
kondisi = ifelse(date <= "2020-03-09","Pre COVID","Saat COVID"),
ftr = case_when(ftr == "A" ~ "Away team menang",
ftr == "D" ~ "Seri",
ftr == "H" ~ "Home team menang"),
ftr = factor(ftr, levels = c("Away team menang",
"Seri",
"Home team menang")),
kondisi = factor(kondisi, levels = c("Pre COVID","Saat COVID")))
data %>%
group_by(kondisi) %>%
summarise(freq = n()) %>%
rename(Kondisi = kondisi,
`Banyak pertandingan` = freq) %>%
knitr::kable("html",caption = "Tabel: Berapa banyak pertandingan yang dijalankan?")
new =
data %>%
group_by(kondisi,ftr) %>%
summarise(freq = n()) %>%
ungroup() %>%
group_by(kondisi) %>%
mutate(all_matches = sum(freq),
persen = freq/all_matches*100,
persen = round(persen,1),
persen = paste0(persen,"%"))
match_pre = max(new$all_matches)
match_cov = min(new$all_matches)
new %>%
filter(kondisi == "Pre COVID") %>%
ggplot(aes(x = "",
y = freq,
fill = ftr)) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette="Set2") +
coord_polar("y", start=0) +
ggrepel::geom_label_repel(aes(label = paste(ftr,persen,sep = "\n")),position = position_stack(vjust = 0.5)) +
theme_wsj() +
theme(panel.grid=element_blank(),
panel.background = element_blank(),
axis.title=element_blank(),
legend.position = 'none',
axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title = "Kondisi Pertandingan Sebelum COVID",
subtitle = "Data English Premier League 2019/2020",
caption = paste0("base: ",match_pre," pertandingan"))
new %>%
filter(kondisi == "Saat COVID") %>%
ggplot(aes(x = "",
y = freq,
fill = ftr)) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette="Set2") +
coord_polar("y", start=0) +
ggrepel::geom_label_repel(aes(label = paste(ftr,persen,sep = "\n")),position = position_stack(vjust = 0.5)) +
theme_wsj() +
theme(panel.grid=element_blank(),
panel.background = element_blank(),
axis.title=element_blank(),
legend.position = 'none',
axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title = "Kondisi Pertandingan Saat COVID",
subtitle = "Data English Premier League 2019/2020",
caption = paste0("base: ",match_cov," pertandingan"))
new %>%
ggplot(aes(x = ftr,
y = freq)) +
geom_col(aes(fill = freq)) +
geom_label(aes(label = paste0("n: ",freq,"\nPercent: ",persen),
fill = freq),
color = "white",
size = 2.5) +
scale_fill_gradient(low = "steelblue",high = "darkred") +
facet_wrap(~kondisi) +
theme_wsj() +
theme(axis.text.y = element_blank(),
legend.position = "none",
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 12),
axis.text.x = element_text(size=8)) +
labs(title = "Perbandingan Pemenang Laga\nSebelum dan Saat COVID",
subtitle = "Data English Premier League 2019/2020")
=======
library(tidyr)
data_1 =
read.csv("/home/ikanx101githubio/Documents/belajaR/Bukan Infografis/EPL/EPL 2019.csv") %>%
janitor::clean_names() %>%
select(home_team,away_team,fthg,ftag)
data_2 =
read.csv("/home/ikanx101githubio/Documents/belajaR/Bukan Infografis/EPL/EPL 2018.csv") %>%
janitor::clean_names()%>%
select(home_team,away_team,fthg,ftag)
data = rbind(data_1,data_2)
avg_home_gol = sum(data$fthg)/length(data$home_team)
avg_away_gol = sum(data$ftag)/length(data$away_team)
# pertama adalah home
home =
data %>%
select(home_team,fthg,ftag) %>%
group_by(home_team) %>%
summarise(home_goal = sum(fthg),
away_goal = sum(ftag),
play = n(),
ratio_goal_at_home = home_goal/play,
ratio_goal_against_away_at_home = away_goal/play) %>%
ungroup() %>%
mutate(all_home_goals = sum(home_goal)/sum(play),
all_away_goals = sum(away_goal)/sum(play),
home_attack = ratio_goal_at_home/all_home_goals,
home_defense = ratio_goal_against_away_at_home/all_away_goals,
overall_home = home_attack - home_defense) %>%
select(home_team,home_attack,home_defense,overall_home)
# kedua adalah away
away =
data %>%
select(away_team,fthg,ftag) %>%
group_by(away_team) %>%
summarise(home_goal = sum(fthg),
away_goal = sum(ftag),
play = n(),
ratio_goal_at_away = home_goal/play,
ratio_goal_against_home_at_away = away_goal/play) %>%
ungroup() %>%
mutate(all_home_goals = sum(home_goal)/sum(play),
all_away_goals = sum(away_goal)/sum(play),
away_attack = ratio_goal_against_home_at_away/all_away_goals,
away_defense = ratio_goal_at_away/all_home_goals,
overall_away = away_attack - away_defense) %>%
select(away_team,away_attack,away_defense,overall_away)
away
xgoal = function(tim_kandang,tim_tamu){
home =
home %>%
filter(home_team == tim_kandang)
away =
away %>%
filter(away_team == tim_tamu)
xgoal_home = home$home_attack * away$away_defense * avg_home_gol
xgoal_away = away$away_attack * home$home_defense * avg_away_gol
return(c(xgoal_home,xgoal_away))
}
# set tim yang bertanding
tim_home = "Man United"
tim_away = "Liverpool"
xgoal_data = xgoal(tim_home,tim_away)
prediksi_poisson = function(gol_home,xgoal_home_,gol_away,xgoal_away_){
dpois(x = gol_home, lambda = xgoal_home_) * dpois(x = gol_away, lambda = xgoal_away_) *100
}
# bikin data frame
pred = data.frame(skor_home = c(rep(0,6),rep(1,6),rep(2,6),rep(3,6),rep(4,6),rep(5,6)),
skor_away = rep(c(0:5),6))
pred$prob = prediksi_poisson(pred$skor_home,xgoal_data[1],pred$skor_away,xgoal_data[2])
library(ggplot2)
pred %>%
mutate(label = paste0(skor_home,"-",skor_away,"\nProb: ",round(prob,1),"%"),
skor_home = factor(skor_home,levels = c(0:10)),
skor_away = factor(skor_away,levels = c(0:10))) %>%
ggplot(aes(x = skor_home,y = skor_away,fill = prob)) +
geom_tile() +
geom_label(aes(label = label),size = 3) +
scale_fill_gradient2(low = "lightblue",high = "darkred",midpoint = 5) +
labs(x = tim_home,
y = tim_away)
pred %>%
mutate(hasil = case_when(skor_home > skor_away ~ tim_home,
skor_home < skor_away ~ tim_away,
skor_home == skor_away ~"Seri"),
hasil = factor(hasil,levels = c(tim_home,"Seri",tim_away))
) %>%
group_by(hasil) %>%
summarise(prob = sum(prob)) %>%
ungroup() %>%
mutate(label = round(prob,2),
label = paste0(label,"%")) %>%
ggplot(aes(x = hasil,
y = prob)) +
geom_col(color = "black") +
geom_label(aes(label=label)) +
ggthemes::theme_wsj() +
labs(title = "Who wins?",
subtitle = "Based on Poisson Model",
caption = "Simulasi menggunakan R\nikanx101.com") +
theme(axis.text.y = element_blank(),
plot.caption = element_text(size=10,face = "bold"))
xgoal = function(tim_kandang,tim_tamu){
home =
home %>%
filter(home_team == tim_kandang)
away =
away %>%
filter(away_team == tim_tamu)
xgoal_home = home$home_attack * away$away_defense * avg_home_gol
xgoal_away = away$away_attack * home$home_defense * avg_away_gol
return(c(xgoal_home,xgoal_away))
}
# set tim yang bertanding
tim_home = "Arsenal"
tim_away = "Liverpool"
xgoal_data = xgoal(tim_home,tim_away)
prediksi_poisson = function(gol_home,xgoal_home_,gol_away,xgoal_away_){
dpois(x = gol_home, lambda = xgoal_home_) * dpois(x = gol_away, lambda = xgoal_away_) *100
}
# bikin data frame
pred = data.frame(skor_home = c(rep(0,6),rep(1,6),rep(2,6),rep(3,6),rep(4,6),rep(5,6)),
skor_away = rep(c(0:5),6))
pred$prob = prediksi_poisson(pred$skor_home,xgoal_data[1],pred$skor_away,xgoal_data[2])
library(ggplot2)
pred %>%
mutate(label = paste0(skor_home,"-",skor_away,"\nProb: ",round(prob,1),"%"),
skor_home = factor(skor_home,levels = c(0:10)),
skor_away = factor(skor_away,levels = c(0:10))) %>%
ggplot(aes(x = skor_home,y = skor_away,fill = prob)) +
geom_tile() +
geom_label(aes(label = label),size = 3) +
scale_fill_gradient2(low = "lightblue",high = "darkred",midpoint = 5) +
labs(x = tim_home,
y = tim_away)
pred %>%
mutate(hasil = case_when(skor_home > skor_away ~ tim_home,
skor_home < skor_away ~ tim_away,
skor_home == skor_away ~"Seri"),
hasil = factor(hasil,levels = c(tim_home,"Seri",tim_away))
) %>%
group_by(hasil) %>%
summarise(prob = sum(prob)) %>%
ungroup() %>%
mutate(label = round(prob,2),
label = paste0(label,"%")) %>%
ggplot(aes(x = hasil,
y = prob)) +
geom_col(color = "black") +
geom_label(aes(label=label)) +
ggthemes::theme_wsj() +
labs(title = "Who wins?",
subtitle = "Based on Poisson Model",
caption = "Simulasi menggunakan R\nikanx101.com") +
theme(axis.text.y = element_blank(),
plot.caption = element_text(size=10,face = "bold"))
xgoal_data
pred %>%
mutate(label = paste0(skor_home,"-",skor_away,"\nProb: ",round(prob,1),"%"),
skor_home = factor(skor_home,levels = c(0:10)),
skor_away = factor(skor_away,levels = c(0:10))) %>%
ggplot(aes(x = skor_home,y = skor_away,fill = prob)) +
geom_tile() +
geom_label(aes(label = label),size = 3) +
scale_fill_gradient2(low = "lightblue",high = "darkred",midpoint = "none") +
labs(x = tim_home,
y = tim_away)
pred %>%
mutate(label = paste0(skor_home,"-",skor_away,"\nProb: ",round(prob,1),"%"),
skor_home = factor(skor_home,levels = c(0:10)),
skor_away = factor(skor_away,levels = c(0:10))) %>%
ggplot(aes(x = skor_home,y = skor_away,fill = prob)) +
geom_tile() +
geom_label(aes(label = label),size = 3) +
scale_fill_gradient2(low = "lightblue",high = "darkred",midpoint = 0) +
labs(x = tim_home,
y = tim_away)
pred %>%
mutate(label = paste0(skor_home,"-",skor_away,"\nProb: ",round(prob,1),"%"),
skor_home = factor(skor_home,levels = c(0:10)),
skor_away = factor(skor_away,levels = c(0:10))) %>%
ggplot(aes(x = skor_home,y = skor_away,fill = prob)) +
geom_tile() +
geom_label(aes(label = label),size = 3) +
scale_fill_gradient2(low = "lightblue",high = "darkred",midpoint = 7) +
labs(x = tim_home,
y = tim_away)
pred %>%
mutate(label = paste0(skor_home,"-",skor_away,"\nProb: ",round(prob,1),"%"),
skor_home = factor(skor_home,levels = c(0:10)),
skor_away = factor(skor_away,levels = c(0:10))) %>%
ggplot(aes(x = skor_home,y = skor_away,fill = prob)) +
geom_tile() +
geom_label(aes(label = label),size = 3) +
scale_fill_gradient2(low = "lightblue",high = "darkred",midpoint = 0) +
labs(x = tim_home,
y = tim_away)
pred %>%
mutate(label = paste0(skor_home,"-",skor_away,"\nProb: ",round(prob,1),"%"),
skor_home = factor(skor_home,levels = c(0:10)),
skor_away = factor(skor_away,levels = c(0:10))) %>%
ggplot(aes(x = skor_home,y = skor_away,fill = prob)) +
geom_tile() +
geom_label(aes(label = label),size = 3) +
scale_fill_gradient2(low = "lightblue",high = "darkred",midpoint = 4) +
labs(x = tim_home,
y = tim_away)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
setwd("~/Documents/ikanx101.com/_posts/EPL/poisson")
library(dplyr)
library(ggplot2)
library(tidyr)
xgoal = function(tim_kandang,tim_tamu){
home =
home %>%
filter(home_team == tim_kandang)
away =
away %>%
filter(away_team == tim_tamu)
xgoal_home = home$home_attack * away$away_defense * avg_home_gol
xgoal_away = away$away_attack * home$home_defense * avg_away_gol
return(c(xgoal_home,xgoal_away))
}
# set tim yang bertanding
tim_home = "Arsenal"
tim_away = "Liverpool"
xgoal_data = xgoal(tim_home,tim_away)
>>>>>>> 42f993349a806065812a9443a01f5920e1d27d84
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
setwd("~/Documents/ikanx101.com/_posts/EPL/poisson")
library(dplyr)
library(ggplot2)
<<<<<<< HEAD
library(ggpubr)
library(ggthemes)
data = read.csv("~/belajaR/Bukan Infografis/EPL/EPL.csv")
data = janitor::clean_names(data)
data =
data %>%
mutate(date = as.Date(date,format = "%d/%m/%Y"),
kondisi = ifelse(date <= "2020-03-09","Pre COVID","Saat COVID"),
ftr = case_when(ftr == "A" ~ "Away team menang",
ftr == "D" ~ "Seri",
ftr == "H" ~ "Home team menang"),
ftr = factor(ftr, levels = c("Away team menang",
"Seri",
"Home team menang")),
kondisi = factor(kondisi, levels = c("Pre COVID","Saat COVID")))
data %>%
group_by(kondisi) %>%
summarise(freq = n()) %>%
rename(Kondisi = kondisi,
`Banyak pertandingan` = freq) %>%
knitr::kable("html",caption = "Tabel: Berapa banyak pertandingan yang dijalankan?")
new =
data %>%
group_by(kondisi,ftr) %>%
summarise(freq = n()) %>%
ungroup() %>%
group_by(kondisi) %>%
mutate(all_matches = sum(freq),
persen = freq/all_matches*100,
persen = round(persen,1),
persen = paste0(persen,"%"))
match_pre = max(new$all_matches)
match_cov = min(new$all_matches)
new %>%
filter(kondisi == "Pre COVID") %>%
ggplot(aes(x = "",
y = freq,
fill = ftr)) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette="Set2") +
coord_polar("y", start=0) +
ggrepel::geom_label_repel(aes(label = paste(ftr,persen,sep = "\n")),position = position_stack(vjust = 0.5)) +
theme_pubclean() +
theme(panel.grid=element_blank(),
panel.background = element_blank(),
axis.title=element_blank(),
legend.position = 'none',
axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title = "Kondisi Pertandingan Sebelum COVID",
subtitle = "Data English Premier League 2019/2020",
caption = paste0("base: ",match_pre," pertandingan"))
new %>%
filter(kondisi == "Saat COVID") %>%
ggplot(aes(x = "",
y = freq,
fill = ftr)) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette="Set2") +
coord_polar("y", start=0) +
ggrepel::geom_label_repel(aes(label = paste(ftr,persen,sep = "\n")),position = position_stack(vjust = 0.5)) +
theme_pubclean() +
theme(panel.grid=element_blank(),
panel.background = element_blank(),
axis.title=element_blank(),
legend.position = 'none',
axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title = "Kondisi Pertandingan Saat COVID",
subtitle = "Data English Premier League 2019/2020",
caption = paste0("base: ",match_cov," pertandingan"))
new %>%
ggplot(aes(x = ftr,
y = freq)) +
geom_col(aes(fill = freq)) +
geom_label(aes(label = paste0("n: ",freq,"\nPercent: ",persen),
fill = freq),
color = "white",
size = 2.5) +
scale_fill_gradient(low = "steelblue",high = "darkred") +
facet_wrap(~kondisi) +
theme_wsj() +
theme(axis.text.y = element_blank(),
legend.position = "none",
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 12),
axis.text.x = element_text(size=8)) +
labs(title = "Perbandingan Pemenang Laga\nSebelum dan Saat COVID",
subtitle = "Data English Premier League 2019/2020")
new =
=======
library(tidyr)
nomnoml::nomnoml("#direction: down,
[Data Mentah] -> [Data Bersih]
[Data Bersih] -> [Dist Poisson]
[Dist Poisson] -> [Visualisasi]
[Data Mentah|
[EPL 2018/2019] -> [Gabung]
[EPL 2019/2020] -> [Gabung]
]
[Data Bersih|
[Gabung] -> [Data Tim Home]
[Gabung] -> [Data Tim Away]
[Data Tim Home] -> [Hitung Attack dan Defense]
[Data Tim Away] -> [Hitung Attack dan Defense]
[Hitung Attack dan Defense] -> [Data Attack dan Defense Tim Home]
[Hitung Attack dan Defense] -> [Data Attack dan Defense Tim Away]
]
[Dist Poisson|
[Data Attack dan Defense Tim Home] -> [Selected Tim Home]
[Data Attack dan Defense Tim Away] -> [Selected Tim Away]
[Selected Tim Home] -> [Hitung Expected Goal]
[Selected Tim Away] -> [Hitung Expected Goal]
[Hitung Expected Goal] -> [Hitung Peluang]
[Hitung Peluang] -> [Matrix Peluang]
]
[Visualisasi|
[Matrix Peluang] -> [geom_tile()]
[Matrix Peluang] -> [geom_col()]
]
")
data_2 =
read.csv("/home/ikanx101githubio/Documents/belajaR/Bukan Infografis/EPL/EPL 2019.csv") %>%
janitor::clean_names() %>%
select(date,home_team,away_team,fthg,ftag)
data_1 =
read.csv("/home/ikanx101githubio/Documents/belajaR/Bukan Infografis/EPL/EPL 2018.csv") %>%
janitor::clean_names()%>%
select(date,home_team,away_team,fthg,ftag)
data = rbind(data_1,data_2)
data %>%
rename(home_goals = fthg,
away_goals = ftag) %>%
head(10) %>%
knitr::kable()
avg_home_gol = sum(data$fthg)/length(data$home_team)
avg_away_gol = sum(data$ftag)/length(data$away_team)
# pertama adalah home
home =
data %>%
select(home_team,fthg,ftag) %>%
group_by(home_team) %>%
summarise(home_goal = sum(fthg),
away_goal = sum(ftag),
play = n(),
ratio_goal_at_home = home_goal/play,
ratio_goal_against_away_at_home = away_goal/play) %>%
ungroup() %>%
mutate(all_home_goals = sum(home_goal)/sum(play),
all_away_goals = sum(away_goal)/sum(play),
home_attack = ratio_goal_at_home/all_home_goals,
home_defense = ratio_goal_against_away_at_home/all_away_goals,
overall_home = home_attack - home_defense) %>%
select(home_team,home_attack,home_defense,overall_home)
# kedua adalah away
away =
>>>>>>> 42f993349a806065812a9443a01f5920e1d27d84
data %>%
select(away_team,fthg,ftag) %>%
group_by(away_team) %>%
summarise(home_goal = sum(fthg),
away_goal = sum(ftag),
play = n(),
ratio_goal_at_away = home_goal/play,
ratio_goal_against_home_at_away = away_goal/play) %>%
ungroup() %>%
<<<<<<< HEAD
group_by(kondisi) %>%
mutate(all_matches = sum(freq),
persen = freq/all_matches*100,
persen = round(persen,1),
persen = paste0(persen,"%"))
match_pre = max(new$all_matches)
match_cov = min(new$all_matches)
new %>%
filter(kondisi == "Pre COVID") %>%
ggplot(aes(x = "",
y = freq,
fill = ftr)) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette="Set2") +
coord_polar("y", start=0) +
ggrepel::geom_label_repel(aes(label = paste(ftr,persen,sep = "\n")),position = position_stack(vjust = 0.5)) +
theme_pubclean() +
theme(panel.grid=element_blank(),
panel.background = element_blank(),
axis.title=element_blank(),
legend.position = 'none',
axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title = "Kondisi Pertandingan Sebelum COVID",
subtitle = "Data English Premier League 2019/2020",
caption = paste0("base: ",match_pre," pertandingan"))
new
hasil = prop.test(c(43,129),c(92,288))
hasil
ifelse(hasil$p.value<0.05,"Tolak H0","H0 tidak ditolak")
hasil$p.value
hasil = prop.test(c(29,87),c(92,288))
hasil
ifelse(hasil$p.value<0.05,"Tolak H0","H0 tidak ditolak")
hasil = prop.test(c(43,29),c(92,92))
hasil
hasil = prop.test(c(129,87),c(288,288))
hasil
data %>%
group_by(kondisi) %>%
summarise(gol_home = mean(fthg),
sd_home = sd(fthg),
gol_away = mean(ftag),
sd_away = sd(ftag)) %>%
ggplot() +
geom_col(aes(x = kondisi,
y = gol_home)) +
geom_errorbar(aes(x = kondisi,
ymin = gol_home - sd_home,
ymax = gol_home + sd_home),width = .1)
data %>%
group_by(kondisi) %>%
summarise(gol_home = mean(fthg),
sd_home = sd(fthg),
gol_away = mean(ftag),
sd_away = sd(ftag)) %>%
ggplot() +
geom_col(aes(x = kondisi,
y = gol_home)) +
geom_errorbar(aes(x = kondisi,
ymin = gol_home - sd_home,
ymax = gol_home + sd_home),width = .1) +
theme_wsj()
data %>%
group_by(kondisi) %>%
summarise(gol_home = mean(fthg),
sd_home = sd(fthg),
gol_away = mean(ftag),
sd_away = sd(ftag)) %>%
ggplot() +
geom_col(aes(x = kondisi,
y = gol_home,
fill = kondisi),
color = "black") +
geom_errorbar(aes(x = kondisi,
ymin = gol_home - sd_home,
ymax = gol_home + sd_home),width = .1) +
theme_wsj()
data %>%
group_by(kondisi) %>%
summarise(gol_home = mean(fthg),
sd_home = sd(fthg),
gol_away = mean(ftag),
sd_away = sd(ftag)) %>%
ggplot() +
geom_col(aes(x = kondisi,
y = gol_home,
fill = kondisi),
color = "black") +
geom_errorbar(aes(x = kondisi,
ymin = gol_home - sd_home,
ymax = gol_home + sd_home),width = .1) +
theme_wsj() +
labs(title = "Perbandingan Goal yang Diciptakan oleh Home Team")
data %>%
group_by(kondisi) %>%
summarise(gol_home = mean(fthg),
sd_home = sd(fthg),
gol_away = mean(ftag),
sd_away = sd(ftag)) %>%
ggplot() +
geom_col(aes(x = kondisi,
y = gol_home,
fill = kondisi),
color = "black") +
geom_errorbar(aes(x = kondisi,
ymin = gol_home - sd_home,
ymax = gol_home + sd_home),width = .1,
color = "steelblue") +
theme_wsj() +
labs(title = "Perbandingan Goal yang Diciptakan oleh Home Team")
data %>%
group_by(kondisi) %>%
summarise(gol_home = mean(fthg),
sd_home = sd(fthg),
gol_away = mean(ftag),
sd_away = sd(ftag)) %>%
ggplot() +
geom_col(aes(x = kondisi,
y = gol_home,
fill = kondisi),
color = "black") +
geom_errorbar(aes(x = kondisi,
ymin = gol_home - sd_home,
ymax = gol_home + sd_home),width = .1,
color = "steelblue") +
theme_wsj() +
labs(title = "Perbandingan Goal yang Diciptakan oleh Home Team",
subtitle = "Data English Premier League 2019/2020") +
theme(axis.text.y = element_blank(),
legend.position = "none",
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 12))
data %>%
group_by(kondisi) %>%
summarise(gol_home = mean(fthg),
sd_home = sd(fthg),
gol_away = mean(ftag),
sd_away = sd(ftag)) %>%
ggplot() +
geom_col(aes(x = kondisi,
y = gol_home,
fill = kondisi),
color = "black") +
geom_errorbar(aes(x = kondisi,
ymin = gol_home - sd_home,
ymax = gol_home + sd_home),width = .1,
color = "steelblue") +
theme_wsj() +
labs(title = "Perbandingan Goal yang Diciptakan oleh\nHome Team",
subtitle = "Data English Premier League 2019/2020") +
theme(axis.text.y = element_blank(),
legend.position = "none",
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 12))
data %>%
group_by(kondisi) %>%
summarise(gol_home = mean(fthg),
sd_home = sd(fthg),
gol_away = mean(ftag),
sd_away = sd(ftag)) %>%
ggplot() +
geom_col(aes(x = kondisi,
y = gol_home,
fill = kondisi),
color = "black") +
geom_errorbar(aes(x = kondisi,
ymin = gol_home - sd_home,
ymax = gol_home + sd_home),width = .1,
color = "steelblue") +
theme_wsj() +
labs(title = "Perbandingan Goal yang Diciptakan oleh\nHome Team",
subtitle = "Data English Premier League 2019/2020") +
theme(legend.position = "none",
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 12))
data %>%
group_by(kondisi) %>%
summarise(gol_home = mean(fthg),
sd_home = sd(fthg),
gol_away = mean(ftag),
sd_away = sd(ftag)) %>%
ggplot() +
geom_col(aes(x = kondisi,
y = gol_away,
fill = kondisi),
color = "black") +
geom_errorbar(aes(x = kondisi,
ymin = gol_away - sd_away,
ymax = gol_away + sd_away),width = .1,
color = "steelblue") +
theme_wsj() +
labs(title = "Perbandingan Goal yang Diciptakan oleh\nAway Team",
subtitle = "Data English Premier League 2019/2020") +
theme(legend.position = "none",
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 12))
data %>%
group_by(kondisi) %>%
summarise(gol_home = mean(fthg),
sd_home = sd(fthg),
gol_away = mean(ftag),
sd_away = sd(ftag))
data %>%
group_by(kondisi) %>%
summarise(gol_home = mean(fthg),
sd_home = sd(fthg),
gol_away = mean(ftag),
sd_away = sd(ftag)) %>%
rename(Kondisi = kondisi,
`Goal Home Team` = gol_home,
`StDev Goal Home Team` = sd_home)
test_1 = t.test(fthg~kondisi,data)
test_1
ifelse(test_1$p.value<0.05,"Tolak H0","H0 tidak ditolak")
test_1 = t.test(fthg~kondisi,data)
test_1
ifelse(test_1$p.value<0.05,"Tolak H0","H0 tidak ditolak")
test_1$p.value
test_1 = t.test(ftag~kondisi,data)
test_1
ifelse(test_1$p.value<0.05,"Tolak H0","H0 tidak ditolak")
matrix()
matrix(ncol=5,nrnrow = 5)
matrix(ncol=5,nrow = 5)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
setwd("~/Documents/ikanx101.com/_posts/EPL/poisson")
matrix(ncol=5,nrow = 5,dimnames = c(0:4))
matrix(ncol=5,nrow = 5)
=======
mutate(all_home_goals = sum(home_goal)/sum(play),
all_away_goals = sum(away_goal)/sum(play),
away_attack = ratio_goal_against_home_at_away/all_away_goals,
away_defense = ratio_goal_at_away/all_home_goals,
overall_away = away_attack - away_defense) %>%
select(away_team,away_attack,away_defense,overall_away)
knitr::kable(head(home),"html",caption = "Contoh Data Home")
knitr::kable(head(away),"html",caption = "Contoh Data Away")
xgoal = function(tim_kandang,tim_tamu){
home =
home %>%
filter(home_team == tim_kandang)
away =
away %>%
filter(away_team == tim_tamu)
xgoal_home = home$home_attack * away$away_defense * avg_home_gol
xgoal_away = away$away_attack * home$home_defense * avg_away_gol
return(c(xgoal_home,xgoal_away))
}
# set tim yang bertanding
tim_home = "Arsenal"
tim_away = "Liverpool"
xgoal_data = xgoal(tim_home,tim_away)
xgoal_data
>>>>>>> 42f993349a806065812a9443a01f5920e1d27d84
